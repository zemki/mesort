<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\UserController
 */
class UserControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function canEditStudyReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');
        $user = factory(\App\User::class)->create();
        $study = factory(\App\Study::class)->create();
        $response = $this->actingAs($user)->post('users/{user}/canedit/{study}', [
            // TODO: send request data
        ]);
        $response->assertOk();
        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function cancreatestudiesReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');
        $user = factory(\App\User::class)->create();
        $response = $this->actingAs($user)->patch('userscanedit/{user}', [
            // TODO: send request data
        ]);
        $response->assertOk();
        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function checkemailReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');
        $user = factory(\App\User::class)->create();
        $response = $this->actingAs($user)->post('checkemail', [
            // TODO: send request data
        ]);
        $response->assertOk();
        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function destroyReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');
        $user = factory(\App\User::class)->create();
        $response = $this->actingAs($user)->delete('users/{user}');
        $response->assertOk();
        $this->assertDeleted($user);
        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function detachfromstudyReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');
        $user = factory(\App\User::class)->create();
        $study = factory(\App\Study::class)->create();
        $response = $this->actingAs($user)->post('users/{user}/{study}', [
            // TODO: send request data
        ]);
        $response->assertOk();
        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function editReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');
        $user = factory(\App\User::class)->create();
        $response = $this->actingAs($user)->get('user/{user}');
        $response->assertOk();
        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function getinputdataReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');
        $user = factory(\App\User::class)->create();
        $response = $this->actingAs($user)->post('getinputdata', [
            // TODO: send request data
        ]);
        $response->assertOk();
        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function newpasswordReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');
        $response = $this->post('newpassword', [
            // TODO: send request data
        ]);
        $response->assertOk();
        $response->assertViewIs('errors.resetpassword');
        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function overviewReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');
        $user = factory(\App\User::class)->create();
        $response = $this->actingAs($user)->get('users');
        $response->assertOk();
        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function sendresetpasswordReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');
        $user = factory(\App\User::class)->create();
        $response = $this->actingAs($user)->patch('usersconfirm/{user}', [
            // TODO: send request data
        ]);
        $response->assertOk();
        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function showresetpasswordReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');
        $response = $this->get('setpassword');
        $response->assertOk();
        $response->assertViewIs('errors.resetpassword');
        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function storeReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');
        $response = $this->post('admin/users/supervisor', [
            // TODO: send request data
        ]);
        $response->assertRedirect('/admin/supervisor');
        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function updateReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');
        $user = factory(\App\User::class)->create();
        $response = $this->actingAs($user)->patch('users/{user}', [
            // TODO: send request data
        ]);
        $response->assertOk();
        // TODO: perform additional assertions
    }
    // test cases...
}
